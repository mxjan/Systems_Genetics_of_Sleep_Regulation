# Script
	#Name
	Counts normalization
	#ID
	NormScript
	#Path
	/home/mjan/PhD/Scripts/Normalization.R
	#Description
	Script used for transcript normalization using edgeR
	#Input
	$<Raw counts [RawCounts]>
	#Output
	$<Normalized counts [NormCounts]>

# Script

	#Name
	htseq-count union
	#ID
	HTcount

	#Path
	/home/mjan/PhD/Scripts/GenBSUB_htseq-count.py

	#Description
	 
	* Script to generate count file from multiple bam file alignment, generate LSF command
	 
	* The counts were merge using MergeCount.py

	#Input
	$< Bam Files [BamFiles]>
	$<RefSeq file[RefSeq2014]>
	#Output
	$<Raw counts [RawCounts]>

	#Description
	Script take as input a list of the processed bam file

	#Arguments
	-q -s reverse -t exon -m union
	#Version
	0.5.4p3


# Script

	#Name
	Genes partial correlations
	#ID
	pcor

	#Input
	$< Expression Data [NormCounts]>
	$< cis-eQTL File [eQTLfiles]>

	#Output
	$<Partial correlation Matrix [pcorMatrix]>

	#Description

	A Rscript to generate a partial correlation matrix.
	 
	* Example using the script to compute pcor for gene in cortex during Control (Cortex NSD vs Cortex NSD): Matrix<-BXDpcor(CNSD,cis_CNSD,CNSD,cis_CNSD,GenotypeMatrix,CORES=30,method="pearson")
	
	 
	* The input file (Expression matrix: CNSD and cis-eQTL matrix: cis_CNSD) need to be formated to contain the same gene, You can see an example here: /home/mjan/PhD/Analysis/Partial_Correlation/GetPartialCorrelationForBXD.R
	
	 
	* The method can be "spearman" or "pearson"

	* "parallel","reshape2","matrixStats" and "RcppEigen" packages are required

	* If you want to change between interaction or additive effect, edit model matrix in the CorResiduals() function
	
	#Path
	/home/mjan/PhD/Scripts/BXDpcor_V1.0.1.R
	#Version
	1.0.1

# Workflow
	#Name
	fastq to bam files
	#ID
	fqToRaw

	#Output
	$< Bam Files [BamFiles]>
	#Input
	$< Fastq Files [fqFiles]>

	#Path
	/home/mjan/PhD/Scripts/

	#CS
	GenBSUB_Clean_Fastq.py
	generate_STAR_alignement_bsubs_1pass.pl
	generate_STAR_alignement_bsubs.pl
	PreProcessBam.py

	#Description
	transformation of fastq files into bam files. Fastq files are filtered to remove low quality reads. STAR is used for alignment with the $<NCBI mm9 [mm9]> reference genome. Bam are then processed using samtools, piccard and GATK for indexing, add read group, mark duplicates, realign indel, and base recalibration.

# Workflow

	# Name
	Variant calling with GATK
	# ID
	VarCall

	#Input
	$< Bam files [BamFiles]>
	$< Bam files hypothalamus [bamhypo]>
	$< Bam files BrainStem [bamBS]>
	#Output
	$<VCF file [VarCall_vcf]>

	#Path
	/home/mjan/PhD/Scripts/

	#CS
	ReheaderFiles.py
	GenBSUB_CallGenotypeLikelihood.py
	CallGeno.sh
	GenBSUB_GenotypingGVCF.py
	genotyping.sh

	# Description
	We use the standard GATK pipeline for variant calling on RNA-sequencing. GenBSUB* scritps generate LSF commands.
	As some bam file were aligned on mm9 (NCBI, for sleep data) and other on mm9 (UCSC, for hypothalamus and brainstem)
	Some file needed to be reheader (ReheaderFiles.py) and modify chromosome name (chr1 -> 1 RemoveCHR.py) 
	
	# Version
	GATK: 3.3.0

	#Link
		#Description
		GATK website
		#Link
		https://software.broadinstitute.org/gatk/

# Workflow
	#Name
	Variant merging
	#ID
	Var_merge

	#Input
	$<VCF file [VarCall_vcf]>
	$<GeneNetwork Genotype [GN2005]>
	#Output
	$<BXD Genotypes [BXDgeno]>

	#CS
	FilterRNAseqVariant.py
	FormateGNmm9.Fred.py	
	CombineGenotype.py

	#Description
	Workflow to merge the public genotype available in geneNetwork and variant called using
	RNA-sequencing. The variant that are highly different from the RNA-seq data are tag as
	unknown 'U'


# Workflow
	#Name
	eQTL dectection with FastQTL
	#ID
	FastQTL

	#Input
	$<Normalized counts [NormCounts]>
	$<Genotypes [BXDgeno]>
	#Output
	$<eQTL files [eQTLfiles]>

	#Description
	Generation of cis-eQTL files using FastQTL, the complete workflow is empacked using the Rmarkdown cis_eQTL_Analysis.Rmd.

	#CS
	GenoToVcf.py
	bgzip & tabix
	Create_BED_UCSC.py
	bgzip & tabix
	ciseQTLAnalysis.sh
	Compute qvalue

	#Path
	/home/mjan/PhD/Analysis/cis-eQTL_Detection/cis_eQTL_Analysis.Rmd

	#Link
		#Description
		FastQTL
		#Link
		http://fastqtl.sourceforge.net/

	#Version
	fastQTL.1.165.linux


#Workflow
	#Name
	eQTL detection for fold-change after SD
	#ID
	FC_FastQTL

	#Input
	$<Normalized counts [NormCounts]>
	$<Genotypes [BXDgeno]>
	#Output
	$<eQTL files [eQTLfiles]>

	#Description
	 
	Generation of cis-eQTL files using FastQTL, the complete workflow is empacked using the Rmarkdown cis_FC_eQTL_Analysis.Rmd.	
	 
	Same pipeline as $<standard cis-eQTL [FastQTL]> but using fold-change

	#CS
	Fold-change calculation
	GenoToVcf.py
	bgzip & tabix
	Create_BED_UCSC.py
	bgzip & tabix
	ciseQTLAnalysis.sh
	Compute qvalue	
	
	#Path
	/home/mjan/PhD/Analysis/cis-eQTL_Detection/cis_FC_eQTL_Analysis.Rmd

	#Link
		#Description
		FastQTL
		#Link
		http://fastqtl.sourceforge.net/

	#Version
	fastQTL.1.165.linux


#Rmarkdown
	#Name
	Genotype-SD interaction for transcript
	#ID
	Int_Geno_SD_Limma
	
	#Input
	$<Raw counts [RawCounts]>
	$<Genotypes [BXDgeno]>
	$<cis-eQTL fold-change [FC_FastQTL] >

	#Description
	 	 
	A limma pipeline that test if a gene fold-change after $<sleep deprivation [SD]> that was map locally (using $< cis-eQTL fold-change [FC_FastQTL]>) 
	has a significant interaction term.
	 		
	The pipeline use the following linear model: Gene Level = Genotype * Condition
	
	#Output
	$<Genotype SD significant interaction [Geno_SD_Interaction_Files]>

	#Path
	/home/mjan/PhD/Analysis/Allelic_Differential_Expression/Allelic_Differential_Expression_Final.Rmd

#Rmarkdown
	#Name
	Genotype-SD interaction for metabolite
	#ID
	Int_Geno_SD_Metabo
	
	#Input
	$<Metabolite level [MetaboData]>
	$<Genotypes [BXDgeno]>
	mQTL

	#Description
	 
	An ANOVA pipeline that test if a metabolite fold-change after $<sleep deprivation [SD]> that was map locally (using mQTL) 
	has a significant interaction term.
	  
	As we have independent measurement between condition and multiple value for each BXD lines, we use the following linear model
	 
	The pipeline use the following nested linear model: Metabolite Level = Genotype/BXDLines + Genotype * Condition
	
	#Output
	$<Genotype SD significant interaction [Genotype_SD_Interaction_Metabolites]>

	#Path
	/home/mjan/PhD/BXD_Paper_Public/Analysis/Differential_Expression_Metabolites_FC.Rmd


#Rmarkdown
	#Name
	Genotype-SD interaction for phenotypes
	#ID
	Int_Geno_SD_Pheno
	
	#Input
	$<Phenotype data [SleepPheno]>
	$<Genotypes [BXDgeno]>
	ph-QTL

	#Description
	 
	A mixed model pipeline that test if a phenotypes fold-change after $<sleep deprivation [SD]> that was map locally (using ph-QTL) 
	has a significant interaction term.
	
	As we have dependent measurement between condition and multiple value for each BXD lines, we use the following linear mixed model (we didn't use lines as fixed effect to reduce
	the number of parameter used in our model)
	 
	The pipeline use the following linear mixed model: Phenotypes Level => fixed effect: Genotype * Condition; random effect: Mouse individual, we model a different intercept
	for different mouse.
	(using lmer: Phenotype ~ Genotype * Condition + (1|mID)) 
	
	#Output
	$<Genotype SD significant interaction [Genotype_SD_Interaction_Phenotypes]>

	#Path
	/home/mjan/PhD/Analysis/SDEffectOnPhenotypes/SDeffectOnPhenotype_FCdiff.Rmd
	
