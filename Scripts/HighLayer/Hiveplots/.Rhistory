NAME <- 'HivePlots'
VERSION <- 'v3.2'
COMMENTS <- 'PearsonQuick2'
FILENAME <- paste(NAME,VERSION,COMMENTS,sep='_')
DataDir <- "../../../Data/" # location of data files (QTLs, transformed raw data, ...)
source("Plot2.R") # modified functions of HiveR to generate the Hiveplots images
source("../../IntermediateLayer/PartialCorrelation/BXDpcor.R") # See this script for Liver-Cortex Correlation (use for Tcor files)
# Load packages and set dir
library(gridExtra)
##install.packages("GISTools")
library(GISTools)
library(igraph)
##install.packages("qgraph")
##install.packages("rlang")
##install.packages("tibble")
##install.packages("checkmate")
##install.packages("data.table")
library(qgraph)
##install.packages("HiveR")
library(HiveR)
library(RColorBrewer)
library(psych)
require(grid)
##if (!requireNamespace("BiocManager", quietly = TRUE))
##install.packages("BiocManager")
##BiocManager::install("qvalue")
library(qvalue)
AxisScalingFactor <-1000 # axis 1 (metabolites and marker will be 2 times AxisScalingFactor) DO NOT CHANGE (SOMETIMES HARD CODED :((( )!
# Correlation matrix options, will encrease/decrease the number of edges
quantilethreshold <- 0.9995 # quantile position as a hard threshold to select network edges. Threshold for Liver-Cortex correlation matrix #0.99995
metabolitequantilethreshold <- 0.995 # quantile position as a hard threshold to select network edges. Threshold for Cortex-Metabolites or Liver-Metabolites correlation matrix #0.9995
# transeQTL p-value threshold
transthreshold <- 1e-4
# ciseQTL p-value threshold
cisthreshold <- 1e-3
# Correlation options
method="spearman"
##unused
# Will increase/decrease the number of nodes
# Hard threshold, keep gene at correlation X with phentoype:
GeneCorrelationThreshold <- 0.485
# Hard threshold, keep metabolite at correlation X with phentoype:
MetaboCorrelationThreshold<- 0.485
# Global option
nodesSize <- 0.4 # Change node size
weightEdges  <- 1 # Change thickness of edges
CiseQTL <- rgb(0,1,0,alpha=.5)
TranseQTL <- rgb(1,0.5,0,alpha=.2)
eQTLweight <- 1
# Option colors HPD
PositiveCorrelation <- rgb(1,0,0)
NegativeCorrelation <- rgb(0,0.75,1)
NodesColor <- "white"
# PDF
pdfwidthfactor <- 5
pdfheightfactor <- 5
PDFFactor <- 8
formatData <- function(Expr,cis){
Strains <- colnames(Expr)
GenotypeMatrix <- read.table(paste(DataDir,"Genome/GNmm10.newgenotypes_subset_sorted.geno",sep=''), header=TRUE)
Genepos <- read.table(paste(DataDir,"Exome/GenePosition.txt",sep=''), header=TRUE)
Genepos[,1] <- gsub("chr",'',Genepos[,1])
Genepos <- Genepos[as.character(rownames(Expr)),]
cisv <- cis[,2]
names(cisv) <- rownames(cis)
cisv <- as.character(cisv[rownames(Expr)])
names(cisv) <- as.character(rownames(Expr))
Notincis <- c()
for (gene in names(cisv[is.na(cisv)])){
if (gene %in% rownames(cis)){
chr <- Genepos[gene,1]
pos <- Genepos[gene,2]
tmpGM <- GenotypeMatrix[GenotypeMatrix[,1]==chr,]
tmpGM[,4] <- abs(pos-tmpGM[,4])
cisv[gene] <- as.character(tmpGM[which(tmpGM[,4]==min(tmpGM[,4])),2])
}else {Notincis <- c(Notincis,gene)}
}
cisvfinal <- cisv[-which(names(cisv) %in% Notincis)]
Exprfinal <- Expr[-which(rownames(Expr) %in% Notincis),]
return(list(Exprfinal,cisvfinal))
}
# READ DATA
# Load sleep phenotypes (traitData object)
load(paste(DataDir,"Phenome/SleepPhenotype3.Rdata",sep=''))
# Load data expression
CNSD <- read.table(paste(DataDir,"Exome/edgeR_normalized_CPM_Cortex_NSD.tab",sep=''),header=TRUE,row.names=1)
CNSD <- CNSD[,rownames(traitData)] # to sort columns (BXD lines) by their order (rows) for the traitData
CSD <- read.table(paste(DataDir,"Exome/edgeR_normalized_CPM_Cortex_SD.tab",sep=''),header=TRUE,row.names=1)
CSD <- CSD[,rownames(traitData)]
LNSD <- read.table(paste(DataDir,"Exome/edgeR_normalized_CPM_Liver_NSD.tab",sep=''),header=TRUE,row.names=1)
LNSD <- LNSD[,rownames(traitData)]
LSD <- read.table(paste(DataDir,"Exome/edgeR_normalized_CPM_Liver_SD.tab",sep=''),header=TRUE,row.names=1)
LSD <- LSD[,rownames(traitData)]
# Load Phenotype categories, change some names
# sleep phenotypes
Pheno <- read.table(paste(DataDir,"Phenome/Phenotype.Categories.txt",sep=''),sep='\t',header=TRUE)
Pheno$filename.variablename <- gsub('.out','.quant.out',Pheno$filename.variablename)
Pheno$filename.variablename <- gsub("BXD_NR-ratio","BXD_NR.ratio",Pheno$filename.variablename)
Pheno$filename.variablename <- gsub("BXDvs1224bsl.","BXDvs1224bsl.quant.out.",Pheno$filename.variablename)
Pheno$filename.variablename <- gsub("hgain","hGain",Pheno$filename.variablename)
Pheno$filename.variablename <- gsub("hloss","hLoss",Pheno$filename.variablename)
# metabolite phenotypes
File <- paste(DataDir,"Metabolome/Metabolites_BXD_alldata.txt",sep='')
x <- read.table(File,header=TRUE,sep="\t")
n <- x[1,]
names(n) <- gsub(".","_",names(n),fixed = TRUE)
n <- n[seq(6,length(n))]
Pheno <- as.matrix(Pheno)
for (i in seq(1,ncol(n))){
d <- c(paste(colnames(n)[i],'_SD',sep=''),'rec','metabolite',as.character(n[,i]))
Pheno <- rbind(Pheno,d)
d <- c(paste(colnames(n)[i],'_FC',sep=''),'rec vs bsl','metabolite',as.character(n[,i]))
Pheno <- rbind(Pheno,d)
d <- c(colnames(n)[i],'bsl','metabolite',as.character(n[,i]))
Pheno <- rbind(Pheno,d)
}
Pheno <- as.data.frame(Pheno)
rownames(Pheno) <- NULL
# Load Metabolite data
mNSD <- read.table(paste(DataDir,"Metabolome/MetabolitesMean.NSD.txt", sep=''), header=TRUE, row.names=1)
mNSD <- mNSD[rownames(traitData),]
# Get SD metabolite mean concentration:
mSD <- read.table(paste(DataDir,"Metabolome/MetabolitesMean.SD.txt", sep=''), header=TRUE, row.names=1)
colnames(mSD) <- sapply(colnames(mSD),paste,'_SD', sep='')
mSD <- mSD[rownames(traitData),]
# Get FC metabolite mean concentration:
mFC <- read.table(paste(DataDir,"Metabolome/MetabolitesFC.txt", sep=''), header=TRUE, row.names=1)
colnames(mFC) <- sapply(colnames(mFC),paste,'_FC', sep='')
mFC <- mFC[rownames(traitData),]
# Corticosteroid data
Cort <- read.table(paste(DataDir,"Metabolome/Corticosteroid_Unfiltered.txt", sep=''), header=TRUE, row.names=1)
mousename <- gsub("BXD","BXD0",rownames(Cort))
mousename <- gsub("BXD0100","BXD100",mousename)
mousename <- gsub("BXD0101","BXD101",mousename)
mousename <- gsub("BXD0103","BXD103",mousename)
rownames(Cort) <- mousename
Cort <- Cort[rownames(traitData),c(1,2)]
Pheno <- rbind(as.matrix(Pheno),c("Cortico_Avg_NSD","bsl","Cort","Cort"))
Pheno <- rbind(Pheno,c("Cortico_Avg_SD","rec","Cort","Cort"))
Pheno <- as.data.frame(Pheno)
# Read cis-eQTL
# Correction for multiple test using qvalue R packages as suggested by Ongen et al.
eQTLCorrection <- function(t){
t <- t[! duplicated(t[,1]),] # remove duplicated rownames (1)
qt <- qvalue(t$V11) ### not sure this is the right column (was column 10 when there was 10 columns)
qt <- as.matrix(qt$qvalues)
rownames(qt) <- t$V1
qt[is.na(qt)] <- 1
qt <- as.data.frame(qt)
qt[,2] <- t[,6]
qt <- qt[qt[,1]<=cisthreshold,,drop=FALSE]
return(qt)
}
cisCNSD <- read.table(paste(DataDir,"IntermediateLayer/cis-eQTL/ciseQTL.Cortex.NSD.txt", sep=''))
qcisCNSD <- eQTLCorrection(cisCNSD)
cisCSD <- read.table(paste(DataDir,"IntermediateLayer/cis-eQTL/ciseQTL.Cortex.SD.txt", sep=''))
qcisCSD <- eQTLCorrection(cisCSD)
cisLNSD <- read.table(paste(DataDir,"IntermediateLayer/cis-eQTL/ciseQTL.Liver.NSD.txt", sep=''))
qcisLNSD <- eQTLCorrection(cisLNSD)
cisLSD <- read.table(paste(DataDir,"IntermediateLayer/cis-eQTL/ciseQTL.Liver.SD.txt", sep=''))
qcisLSD <- eQTLCorrection(cisLSD)
# Read transeQTL
transCNSD <- read.table(paste(DataDir,"IntermediateLayer/trans-eQTL/transeQTL_CNSD_filtered.txt", sep=''), header=TRUE)
transCNSD <- transCNSD[transCNSD$p_value<=transthreshold,]
transCSD <- read.table(paste(DataDir,"IntermediateLayer/trans-eQTL/transeQTL_CSD_filtered.txt", sep=''), header=TRUE)
transCSD <- transCSD[transCSD$p_value<=transthreshold,]
transLNSD <- read.table(paste(DataDir,"IntermediateLayer/trans-eQTL/transeQTL_LNSD_filtered.txt", sep=''), header=TRUE)
transLNSD <- transLNSD[transLNSD$p_value<=transthreshold,]
transLSD <- read.table(paste(DataDir,"IntermediateLayer/trans-eQTL/transeQTL_LSD_filtered.txt",sep=''), header=TRUE)
transLSD <- transLSD[transLSD$p_value<=transthreshold,]
# Marker Position File
Mpos <- read.table(paste(DataDir,"Genome/GNmm10.newgenotypes_subset_sorted.geno",sep=''), header=TRUE)
Locus <- Mpos$Locus
Mpos <- 1:nrow(Mpos)
names(Mpos) <- Locus
# Limma data
LimmaC <- as.matrix(read.table(paste(DataDir,"IntermediateLayer/DE/Limma_Cortex.txt", sep='')))
LimmaL <- as.matrix(read.table(paste(DataDir,"IntermediateLayer/DE/Limma_Liver.txt", sep='')))
# Add Cort Data to metabolite
mSD <- cbind(mSD,Cort[,2, drop=FALSE])
mNSD <- cbind(mNSD,Cort[,1, drop=FALSE])
# test metabolite data
pval <- c()
for (i in 1:ncol(mNSD)){
pval <- c(pval,wilcox.test(log(mNSD[,i]),log(mSD[,i]),paired=TRUE)$p.value)
names(pval)[i] <- names(mNSD)[i]
}
Metabolitespvaladj <- p.adjust(pval, method="fdr")
# All genes
Allgenes <- read.table(paste(DataDir,"Exome/GenePosition.txt", sep=''), header=TRUE, row.names=1)
AllgenesLiver <- Allgenes[rownames(Allgenes) %in% rownames(LNSD) | rownames(Allgenes) %in% rownames(LSD) | rownames(Allgenes) %in% rownames(LimmaL),]
AllgenesCortex <- Allgenes[rownames(Allgenes) %in% rownames(CNSD) | rownames(Allgenes) %in% rownames(CSD) | rownames(Allgenes) %in% rownames(LimmaC),]
# All Pheno
AllPheno <- cbind(traitData,mSD,mNSD,mFC,Cort[,1, drop=FALSE],Cort[,2, drop=FALSE])
FILENAME
NAME <- 'HivePlots'
VERSION <- 'v3.2'
COMMENTS <- 'PearsonQuick2'
FILENAME <- paste(NAME,VERSION,COMMENTS,sep='_')
DataDir <- "../../../../Data/" # location of data files (QTLs, transformed raw data, ...)
source("Plot2.R") # modified functions of HiveR to generate the Hiveplots images
source("../../IntermediateLayer/PartialCorrelation/BXDpcor.R") # See this script for Liver-Cortex Correlation (use for Tcor files)
# Load packages and set dir
library(gridExtra)
##install.packages("GISTools")
library(GISTools)
library(igraph)
##install.packages("qgraph")
##install.packages("rlang")
##install.packages("tibble")
##install.packages("checkmate")
##install.packages("data.table")
library(qgraph)
##install.packages("HiveR")
library(HiveR)
library(RColorBrewer)
library(psych)
require(grid)
##if (!requireNamespace("BiocManager", quietly = TRUE))
##install.packages("BiocManager")
##BiocManager::install("qvalue")
library(qvalue)
file.exists(paste(DataDir,PRECOMPUTEDFILENAME, sep='')
)
PRECOMPUTEDFILENAME <- paste(FILENAME,'.PrecomputedCorrelations.Rdata', sep='')
PRECOMPUTEDFILENAME
paste(DataDir,PRECOMPUTEDFILENAME, sep='')
paste(DataDir,"HighLayer/Hiveplots/",PRECOMPUTEDFILENAME, sep='')
file.exists(paste(DataDir,"HighLayer/Hiveplots/",PRECOMPUTEDFILENAME, sep=''))
PRECOMPUTEDFILENAME <- paste(FILENAME,'.PrecomputedCorrelations.Rdata', sep='')
if (file.exists(paste(DataDir,"HighLayer/Hiveplots/",PRECOMPUTEDFILENAME, sep=''))){
load(paste(DataDir,PRECOMPUTEDFILENAME, sep=''))
}
